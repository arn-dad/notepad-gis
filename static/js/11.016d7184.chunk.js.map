{"version":3,"sources":["utilities/httpHandlers/httpErrorHandler.js","config/axios/index.js","services/api/Service.js","config/apis/index.js","services/api/gateways/NotepadAPI.js","services/api/Api.js","utilities/index.js","config/formats/dates.js","utilities/dates/toDateFormat.js","components/NotepadCard/NotepadCard.jsx","components/ButtonLink/ButtonLink.js","services/Storage/index.js","modules/Notepad/NotepadStore.js","modules/Notepad/Notepad.jsx"],"names":["httpErrorHandler","error","template","message","status","response","console","warn","data","headers","request","axios","axiosInstance","create","baseURL","timeout","Service","url","options","method","apis","keys","process","NotepadAPI","api","base","routes","gists","public","setAuthorizationToken","this","get","post","id","patch","delete","notepad","token","defaults","dates","formats","long","full","toDateFormat","date","format","moment","useStyles","makeStyles","theme","root","width","avatar","backgroundColor","NotepadCard","props","classes","React","useState","anchorEl","setAnchorEl","gis","description","owner","created_at","updated_at","open","Boolean","popoverId","undefined","Card","className","CardHeader","Avatar","aria-label","src","avatar_url","action","IconButton","onClick","event","currentTarget","title","subheader","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","component","ListItem","button","onEditNotepad","ListItemIcon","ListItemText","primary","onDeleteNotepad","ButtonLink","children","rest","Button","color","RouterLink","Storage","key","rawData","localStorage","getItem","JSON","parse","stringified","stringify","setItem","clear","notepads","makeAutoObservable","runInAction","a","rootStoreUI","startProgress","getGistsList","compare","set","info","openAlert","severity","endProgress","deleteById","filter","note","prevGists","nextGists","header","paddingBottom","notepadWrapper","marginBottom","Notepad","observer","useEffect","notepadStore","handleEditNotepad","history","push","pathname","search","handleDeleteNotepad","Container","maxWidth","Grid","container","justify","Typography","variant","to","map","length"],"mappings":"qGAAA,kCAAO,IAAMA,EAAmB,SAASC,GACvC,IAAMC,EAAW,CACfC,QAAS,0BACTC,OAAQ,GAmBV,OAhBIH,EAAMI,UACRC,QAAQC,KAAK,qCACbL,EAASC,QAAUF,EAAMI,SAASG,KAAKL,QACvCD,EAASE,OAASH,EAAMI,SAASD,OACjCE,QAAQC,KAAK,kBAAmBN,EAAMI,SAASG,MAC/CF,QAAQC,KAAK,oBAAqBN,EAAMI,SAASD,QACjDE,QAAQC,KAAK,qBAAsBN,EAAMI,SAASI,UACzCR,EAAMS,SACfJ,QAAQC,KAAK,qDACbD,QAAQC,KAAK,UAAWN,EAAMS,WAE9BJ,QAAQC,KAAK,wEACbL,EAASC,QAAUF,EAAME,QACzBG,QAAQC,KAAK,QAASN,EAAME,UAGvBD,I,0ICpBIS,E,OAAQC,EAAcC,OAAO,CACxCC,QAAS,IACTC,QAAS,OCHEC,EAAb,mFACE,SAAIC,EAAKC,GACP,OAAOP,EAAM,aAAEQ,OAAQ,MAAOF,OAAQC,MAF1C,kBAKE,SAAKD,EAAKC,GACR,OAAOP,EAAM,aAAEQ,OAAQ,OAAQF,OAAQC,MAN3C,oBASE,SAAOD,EAAKC,GACV,OAAOP,EAAM,aAAEQ,OAAQ,SAAUF,OAAQC,MAV7C,iBAaE,SAAID,EAAKC,GACP,OAAOP,EAAM,aAAEQ,OAAQ,MAAOF,OAAQC,MAd1C,mBAiBE,SAAMD,EAAKC,GACT,OAAOP,EAAM,aAAEQ,OAAQ,QAASF,OAAQC,QAlB5C,K,kBCDaE,EACA,yBAGAC,EACEC,GCFFC,EAAb,kDAOE,WAAYC,GAAM,IAAD,8BACf,cAAMA,IAPRC,KAAOL,EAMU,EALjBM,OAAS,CACPC,MAAO,SACPC,OAAQ,iBAKRJ,EAAIK,sBAAsBR,GAFX,EAPnB,gDAYE,SAAaH,GACX,OAAOY,KAAKC,IAAID,KAAKJ,OAAOC,MAArB,aAA8Bb,QAASgB,KAAKL,MAASP,MAbhE,oBAgBE,SAAOA,GACL,OAAOY,KAAKE,KAAKF,KAAKJ,OAAOC,MAAtB,aAA+Bb,QAASgB,KAAKL,MAASP,MAjBjE,oBAoBE,SAAOe,EAAIf,GACT,OAAOY,KAAKI,MAAL,UAAcJ,KAAKJ,OAAOC,MAA1B,YAAmCM,GAAnC,aAA2CnB,QAASgB,KAAKL,MAASP,MArB7E,4BAwBE,SAAee,GACb,OAAOH,KAAKC,IAAL,UAAYD,KAAKJ,OAAOC,MAAxB,YAAiCM,GAAM,CAAEnB,QAASgB,KAAKL,SAzBlE,wBA4BE,SAAWQ,GACT,OAAOH,KAAKK,OAAL,UAAeL,KAAKJ,OAAOC,MAA3B,YAAoCM,GAAM,CAAEnB,QAASgB,KAAKL,SA7BrE,gCAgCE,SAAmBP,GACjB,OAAOY,KAAKC,IAAID,KAAKJ,OAAOE,OAArB,aAA+Bd,QAASgB,KAAKL,MAASP,QAjCjE,GAAgCF,GCiBjB,M,WAfb,aAAe,oBACbc,KAAKM,QAAU,IAAIb,EAAWO,M,yDAGhC,SAAsBO,GACfA,IAEL1B,EAAM2B,SAAS7B,QAAf,+BAAoD4B,M,sCAGtD,kBACS1B,EAAM2B,SAAS7B,QAAf,kB,uTCbJ,IAAM8B,EAAQ,CACnBC,QCJqB,CACrBC,KAAM,eACNC,KAAM,yBDGNC,aEHa,SAAsBC,EAAMC,GACzC,OAAOC,IAAOF,GAAMC,OAAOA,K,OCavBE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETC,OAAQ,CACNC,gBAAiB,eAyENC,EArEK,SAACC,GACnB,IAAMC,EAAUT,IAChB,EAAgCU,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoEL,EAA5DM,IAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,WAAYC,EAA/C,EAA+CA,WAAYhC,EAA3D,EAA2DA,GAUrDiC,EAAOC,QAAQR,GACfS,EAAYF,EAAO,sBAAmBG,EAE5C,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWf,EAAQN,KAAzB,UACE,cAACsB,EAAA,EAAD,CACEpB,OACE,cAACqB,EAAA,EAAD,CAAQC,aAAW,SAASC,IAAKZ,EAAMa,WAAYL,UAAWf,EAAQJ,SAExEyB,OACE,cAACC,EAAA,EAAD,CAAYJ,aAAW,WAAWK,QAlBhB,SAACC,GACzBpB,EAAYoB,EAAMC,gBAiBZ,SACE,cAAC,IAAD,MAGJC,MAAOpB,EACPqB,UACE,qCACA,+CAAkB5C,EAAMI,aAAaqB,EAAYzB,EAAMC,QAAQC,SAC9D,MACD,oDAAuBF,EAAMI,aAAasB,EAAY1B,EAAMC,QAAQE,cAIxE,cAAC0C,EAAA,EAAD,CACEnD,GAAImC,EACJF,KAAMA,EACNP,SAAUA,EACV0B,QA/BqB,WACzBzB,EAAY,OA+BR0B,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAXhB,SAcE,eAACE,EAAA,EAAD,CAAMC,UAAU,MAAhB,UACA,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACd,QAAS,kBAAMxB,EAAMuC,cAAc7D,IAApD,UACE,cAAC8D,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,YAExB,eAACL,EAAA,EAAD,CAAUC,QAAM,EAACd,QAAS,kBAAMxB,EAAM2C,gBAAgBjE,IAAtD,UACE,cAAC8D,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uB,+CC1EjBE,EARI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBAC5C,OACE,cAACC,EAAA,EAAD,yBAAQC,MAAM,UAAUZ,UAAWa,KAAgBH,GAAnD,aACED,M,oECiBSK,E,wFAvBb,SAAWC,GACT,IACE,IAAMC,EAAUC,aAAaC,QAAQH,GACrC,OAAOI,KAAKC,MAAMJ,GAClB,MAAO1G,GACPK,QAAQC,KAAK,kBAAmBN,M,iBAIpC,SAAWyG,EAAKlG,GACd,IACE,IAAMwG,EAAcF,KAAKG,UAAUzG,GACnCoG,aAAaM,QAAQR,EAAKM,GAC1B,MAAO/G,GACPK,QAAQC,KAAK,kBAAmBN,M,mBAIpC,WACE2G,aAAaO,Y,cC0CF,M,WArDb,aAAe,IAAD,gCAFdC,SAAW,GAGTC,YAAmBvF,MACnB,IAAMH,EAAQ8E,EAAQ1E,IAAI,SACvBJ,GACD2F,aAAY,WAAQ,EAAKF,SAAWzF,K,uFAIxC,yCAAA4F,EAAA,6DACEC,IAAYC,gBADd,UAGU9F,EAAQ8E,EAAQ1E,IAAI,WAExBuF,aAAY,WAAQ,EAAKF,SAAWzF,KAL1C,SAO2BH,IAAIY,QAAQsF,eAPvC,OAOUrH,EAPV,OASQyB,KAAK6F,QAAQhG,EAAOtB,EAASG,QAC/BiG,EAAQmB,IAAI,QAASvH,EAASG,MAC9B8G,aAAY,WAAQ,EAAKF,SAAW/G,EAASG,SAE/CF,QAAQuH,KAAK,0BAA2BxH,GAb5C,oDAewBL,YAAiB,EAAD,IAA5BG,EAfZ,EAeYA,QACRqH,IAAYM,UAAU,CAAEC,SAAU,UAAW5H,YAhBjD,yBAkBIqH,IAAYQ,cAlBhB,6E,qHAsBA,WAAiB/F,GAAjB,0BAAAsF,EAAA,6DACEC,IAAYC,gBADd,kBAG2BjG,IAAIY,QAAQ6F,WAAWhG,GAHlD,OAGU5B,EAHV,OAIImH,IAAYM,UAAU,CAAE3H,QAAS,kCACjCmH,aAAY,WACV,EAAKF,SAAW,EAAKA,SAASc,QAAO,SAAAC,GAAI,OAAIA,EAAKlG,KAAOA,KACzDwE,EAAQmB,IAAI,QAAS,EAAKR,aAE5B9G,QAAQuH,KAAK,wBAAyBxH,GAT1C,oDAWwBL,YAAiB,EAAD,IAA5BG,EAXZ,EAWYA,QACRqH,IAAYM,UAAU,CAAEC,SAAU,QAAS5H,YAZ/C,yBAcIqH,IAAYQ,cAdhB,6E,4EAkBA,SAAQI,EAAWC,GACjB,OAAOvB,KAAKG,UAAUmB,KAAetB,KAAKG,UAAUoB,O,MChDlDtF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqF,OAAQ,CACNC,cAAe,IAEjBC,eAAgB,CACd,UAAW,CACTC,aAAc,aAuDLC,EAlDCC,aAAS,SAACpF,GACxB,IAAMC,EAAUT,IAChB6F,qBAAU,WACRC,EAAanB,iBACZ,IAEH,IAAMoB,EAAoB,SAAC7G,GACzBsB,EAAMwF,QAAQC,KAAK,CACjBC,SAAU,kBACVC,OAAO,MAAD,OAAQjH,MAIZkH,EAAsB,SAAClH,GAC3B4G,EAAaZ,WAAWhG,IAG1B,OACE,eAACmH,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAChF,UAAWf,EAAQ8E,OAAQkB,QAAQ,gBAAnD,UACE,cAACF,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,KAAnC,uBAIF,cAAC2D,EAAA,EAAD,UACE,cAAC,EAAD,CAAYK,GAAG,kBAAf,qCAGJ,eAACL,EAAA,EAAD,CAAM/E,UAAWf,EAAQgF,eAAzB,UACGK,EAAazB,SAASwC,KAAI,SAAA/F,GACzB,OACE,cAAC,EAAD,CAEEA,IAAKA,EACLiC,cAAegD,EACf5C,gBAAiBiD,GAHZtF,EAAI5B,QAOb4G,EAAazB,SAASyC,QACtB,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB","file":"static/js/11.016d7184.chunk.js","sourcesContent":["export const httpErrorHandler = function(error) {\n  const template = {\n    message: 'Something went wrong :(',\n    status: 0\n  }\n\n  if (error.response) {\n    console.warn('Request made and server responded')\n    template.message = error.response.data.message;\n    template.status = error.response.status\n    console.warn('Response data: ', error.response.data);\n    console.warn('Response status: ', error.response.status);\n    console.warn('Response headers: ', error.response.headers);\n  } else if (error.request) {\n    console.warn('The request was made but no response was received')\n    console.warn('Request', error.request);\n  } else {\n    console.warn('Something happened in setting up the request that triggered an Error')\n    template.message = error.message;\n    console.warn('Error', error.message);\n  }\n\n  return template;\n}","import axiosInstance from 'axios'\n\nexport const axios = axiosInstance.create({\n  baseURL: '/',\n  timeout: 35000,\n})","import { axios } from '@config/axios';\nexport class Service {\n  get(url, options) {\n    return axios({ method: 'GET', url, ...options });\n  }\n\n  post(url, options) {\n    return axios({ method: 'POST', url, ...options });\n  }\n\n  delete(url, options) {\n    return axios({ method: 'DELETE', url, ...options });\n  }\n\n  put(url, options) {\n    return axios({ method: 'PUT', url, ...options });\n  }\n\n  patch(url, options) {\n    return axios({ method: 'PATCH', url, ...options });\n  }\n}","export const apis = {\n  GISTS_URL: 'https://api.github.com'\n}\n\nexport const keys = {\n  GISTS_TOKEN: process.env.REACT_APP_GISTS_TOKEN\n} ","import { Service } from '@services/api';\nimport { apis, keys } from '@config/apis';\n\nexport class NotepadAPI extends Service {\n  base = apis.GISTS_URL;\n  routes = {\n    gists: '/gists',\n    public: '/gists/public'\n  }\n\n  constructor(api) {\n    super(api)\n    api.setAuthorizationToken(keys.GISTS_TOKEN)\n  }\n\n  getGistsList(options) {\n    return this.get(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  create(options) {\n    return this.post(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  update(id, options) {\n    return this.patch(`${this.routes.gists}/${id}`, { baseURL: this.base, ...options })\n  }\n\n  getNotepadById(id) {\n    return this.get(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  deleteById(id) {\n    return this.delete(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  getGistsPublicList(options) {\n    return this.get(this.routes.public, { baseURL: this.base, ...options })\n  }\n  \n}","import { axios } from '@config/axios';\nimport { NotepadAPI } from './gateways/NotepadAPI';\n\nclass Api {\n \n  constructor() {\n    this.notepad = new NotepadAPI(this);\n  }\n\n  setAuthorizationToken(token) {\n    if (!token) return;\n    \n    axios.defaults.headers['Authorization'] = `Bearer ${token}`\n  }\n\n  removeAuthorizationToken() {\n    delete axios.defaults.headers['Authorization']\n  }\n}\n\nexport default new Api()","import { formats } from '@config/formats/dates';\nimport toDateFormat from './dates/toDateFormat';\n\nexport const dates = {\n  formats,\n  toDateFormat\n}","export const formats = {\n  long: \"MMMM Do YYYY\",\n  full: \"MMMM Do YYYY HH:mm:ss\"\n}","import moment from 'moment';\n\nexport default function toDateFormat(date, format) {\n  return moment(date).format(format);\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport Popover from '@material-ui/core/Popover';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Visibility from '@material-ui/icons/Visibility';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport { dates } from '@utilities';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  avatar: {\n    backgroundColor: '#FAFAFA'\n  }\n}));\n\nconst NotepadCard = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const { gis: { description, owner, created_at, updated_at, id } } = props;\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? 'simple-popover' : undefined;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" src={owner.avatar_url} className={classes.avatar} />\n        }\n        action={\n          <IconButton aria-label=\"settings\" onClick={handlePopoverOpen}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={description}\n        subheader={(\n          <>\n          <i>Created date: {dates.toDateFormat(created_at, dates.formats.long)}</i>\n          {\" | \"}\n          <i>Last updated date: {dates.toDateFormat(updated_at, dates.formats.full)}</i>\n          </>\n        )}\n      />\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <List component=\"nav\">\n        <ListItem button onClick={() => props.onEditNotepad(id)}>\n          <ListItemIcon>\n            <Visibility />\n          </ListItemIcon>\n          <ListItemText primary=\"View\" />\n        </ListItem>\n        <ListItem button onClick={() => props.onDeleteNotepad(id)}>\n          <ListItemIcon>\n            <DeleteOutline />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </ListItem>\n      </List>\n      </Popover>\n    </Card>\n  );\n};\n\nexport default NotepadCard;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst ButtonLink = ({ children, ...rest }) => {\n  return (\n    <Button color=\"primary\" component={RouterLink} {...rest}>\n     {children}\n    </Button>\n  );\n};\n\nexport default ButtonLink;","class Storage {\n  static get(key) {\n    try {\n      const rawData = localStorage.getItem(key);\n      return JSON.parse(rawData);\n    } catch (error) {\n      console.warn('Error Storage: ', error)\n    }\n  }\n\n  static set(key, data) {\n    try {\n      const stringified = JSON.stringify(data);\n      localStorage.setItem(key, stringified);\n    } catch (error) {\n      console.warn('Error Storage: ', error)\n    }\n  }\n\n  static clear() {\n    localStorage.clear();\n  }\n}\n\nexport default Storage;","import { makeAutoObservable, runInAction } from \"mobx\";\nimport rootStoreUI from \"stores/RootStoreUI\";\nimport api from '@services/api';\nimport Storage from '@services/Storage';\nimport { httpErrorHandler } from '@utilities/httpHandlers/httpErrorHandler'\n\nclass NotepadStore {\n  notepads = []\n\n  constructor() {\n    makeAutoObservable(this)\n    const gists = Storage.get('gists');\n    if(gists) {\n      runInAction(() => { this.notepads = gists; });\n    }\n  }\n\n  async getGistsList() {\n    rootStoreUI.startProgress();\n    try {\n      const gists = Storage.get('gists');\n      if(gists) {\n        runInAction(() => { this.notepads = gists; });\n      }\n      const response = await api.notepad.getGistsList();\n\n      if(!this.compare(gists, response.data)) {\n        Storage.set('gists', response.data);\n        runInAction(() => { this.notepads = response.data; });\n      }\n      console.info(\"getGistsList ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'warning', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  async deleteById(id) {\n    rootStoreUI.startProgress();\n    try {\n      const response = await api.notepad.deleteById(id);\n      rootStoreUI.openAlert({ message: 'Notepad successfully deleted!' });\n      runInAction(() => {\n        this.notepads = this.notepads.filter(note => note.id !== id);\n        Storage.set('gists', this.notepads);\n      })\n      console.info(\"deleteById ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'error', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  compare(prevGists, nextGists) {\n    return JSON.stringify(prevGists) === JSON.stringify(nextGists);\n  }\n}\n\nexport default new NotepadStore();","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { observer } from 'mobx-react-lite';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport NotepadCard from '@components/NotepadCard';\nimport ButtonLink from '@components/ButtonLink';\nimport notepadStore from './NotepadStore';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    paddingBottom: 32,\n  },\n  notepadWrapper: {\n    '& > div': {\n      marginBottom: '10px',\n   }\n  }\n}))\n\nconst Notepad = observer((props) => {\n  const classes = useStyles();\n  useEffect(() => {\n    notepadStore.getGistsList();\n  }, [])\n\n  const handleEditNotepad = (id) => {\n    props.history.push({\n      pathname: '/create-notepad',\n      search: `id=${id}`,\n    })\n  }\n\n  const handleDeleteNotepad = (id) => {\n    notepadStore.deleteById(id)\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container className={classes.header} justify=\"space-between\">\n        <Grid>\n          <Typography variant=\"h5\" component=\"h5\">\n            Notepad\n          </Typography>\n        </Grid>\n        <Grid>\n          <ButtonLink to=\"/create-notepad\">Create new Notepad</ButtonLink>\n        </Grid>\n      </Grid>\n      <Grid className={classes.notepadWrapper}>\n        {notepadStore.notepads.map(gis => {\n          return (\n            <NotepadCard \n              key={gis.id} \n              gis={gis} \n              onEditNotepad={handleEditNotepad} \n              onDeleteNotepad={handleDeleteNotepad}\n            />\n          )\n        })}\n        {!notepadStore.notepads.length && (\n          <Grid container justify=\"center\">\n            No Notepad to show.\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n});\n\nexport default Notepad;"],"sourceRoot":""}