{"version":3,"sources":["utilities/httpHandlers/httpErrorHandler.js","config/axios/index.js","services/api/Service.js","config/apis/index.js","services/api/gateways/NotepadAPI.js","services/api/Api.js","modules/CreateNotepad/schema/notepad.schema.js","modules/CreateNotepad/components/CreateNotepadForm/CreateNotepadForm.jsx","utilities/uuid/generateId.js","modules/CreateNotepad/CreateNotepadStore.js","modules/CreateNotepad/CreateNotepad.jsx"],"names":["httpErrorHandler","error","template","message","status","response","console","warn","data","headers","request","axios","axiosInstance","create","baseURL","timeout","Service","url","options","method","apis","keys","process","NotepadAPI","api","base","routes","gists","public","setAuthorizationToken","this","get","post","id","patch","delete","notepad","token","defaults","notepadSchema","Yup","shape","title","max","required","notes","of","note","useStyles","makeStyles","theme","paperWrapper","padding","sectionDivider","sendBtn","margin","spacing","CreateNotepadForm","props","useState","form","setNotepad","classes","useEffect","ps","Container","maxWidth","Paper","className","enableReinitialize","initialValues","validationSchema","onSubmit","values","onSave","touched","errors","handleChange","handleBlur","isValid","noValidate","autoComplete","Grid","container","alignItems","item","xs","Typography","variant","component","TextField","fullWidth","name","label","value","onChange","Boolean","helperText","push","remove","map","n","index","touchedTitle","getIn","errorTitle","touchedNote","errorNote","onBlur","justify","IconButton","color","disabled","length","onClick","multiline","rows","Button","type","endIcon","Icon","uuidv4","notepadForm","makeAutoObservable","a","rootStoreUI","startProgress","prepareNotepad","openAlert","updatedNotepad","updateLocalNotepadData","runInAction","info","severity","endProgress","rest","update","getNotepadById","createTemplate","description","files","filename","content","JSON","stringify","Error","parse","header","paddingBottom","CreateNotepad","observer","queryString","location","search","URLSearchParams","createNotepadStore","getNotepad","reset","history","goBack","startIcon","updateNotepad","createNotepad"],"mappings":"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","file":"static/js/9.ff070f4b.chunk.js","sourcesContent":["export const httpErrorHandler = function(error) {\n  const template = {\n    message: 'Something went wrong :(',\n    status: 0\n  }\n\n  if (error.response) {\n    console.warn('Request made and server responded')\n    template.message = error.response.data.message;\n    template.status = error.response.status\n    console.warn('Response data: ', error.response.data);\n    console.warn('Response status: ', error.response.status);\n    console.warn('Response headers: ', error.response.headers);\n  } else if (error.request) {\n    console.warn('The request was made but no response was received')\n    console.warn('Request', error.request);\n  } else {\n    console.warn('Something happened in setting up the request that triggered an Error')\n    template.message = error.message;\n    console.warn('Error', error.message);\n  }\n\n  return template;\n}","import axiosInstance from 'axios'\n\nexport const axios = axiosInstance.create({\n  baseURL: '/',\n  timeout: 35000,\n})","import { axios } from '@config/axios';\nexport class Service {\n  get(url, options) {\n    return axios({ method: 'GET', url, ...options });\n  }\n\n  post(url, options) {\n    return axios({ method: 'POST', url, ...options });\n  }\n\n  delete(url, options) {\n    return axios({ method: 'DELETE', url, ...options });\n  }\n\n  put(url, options) {\n    return axios({ method: 'PUT', url, ...options });\n  }\n\n  patch(url, options) {\n    return axios({ method: 'PATCH', url, ...options });\n  }\n}","export const apis = {\n  GISTS_URL: 'https://api.github.com'\n}\n\nexport const keys = {\n  GISTS_TOKEN: process.env.REACT_APP_GISTS_TOKEN\n} ","import { Service } from '@services/api';\nimport { apis, keys } from '@config/apis';\n\nexport class NotepadAPI extends Service {\n  base = apis.GISTS_URL;\n  routes = {\n    gists: '/gists',\n    public: '/gists/public'\n  }\n\n  constructor(api) {\n    super(api)\n    api.setAuthorizationToken(keys.GISTS_TOKEN)\n  }\n\n  getGistsList(options) {\n    return this.get(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  create(options) {\n    return this.post(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  update(id, options) {\n    return this.patch(`${this.routes.gists}/${id}`, { baseURL: this.base, ...options })\n  }\n\n  getNotepadById(id) {\n    return this.get(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  deleteById(id) {\n    return this.delete(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  getGistsPublicList(options) {\n    return this.get(this.routes.public, { baseURL: this.base, ...options })\n  }\n  \n}","import { axios } from '@config/axios';\nimport { NotepadAPI } from './gateways/NotepadAPI';\n\nclass Api {\n \n  constructor() {\n    this.notepad = new NotepadAPI(this);\n  }\n\n  setAuthorizationToken(token) {\n    if (!token) return;\n    \n    axios.defaults.headers['Authorization'] = `Bearer ${token}`\n  }\n\n  removeAuthorizationToken() {\n    delete axios.defaults.headers['Authorization']\n  }\n}\n\nexport default new Api()","import * as Yup from \"yup\";\n\n// @TODO empty string validation\n\nexport const notepadSchema = Yup.object().shape({\n  title: Yup\n    .string('Title is required')\n    .max(255, 'Title should be of maximum 255 characters length.')\n    .required('Title is required.'),\n  notes: Yup.array().of(\n    Yup.object().shape({\n      title: Yup\n        .string('Title is required.')\n        .required(\"Title is required.\")\n        .max(255, 'Title should be of maximum 255 characters length.'),\n      note: Yup\n        .string().required(\"Note is required.\")\n        .max(1000, 'Note should be of maximum 1000 characters length.'),\n    })\n  )\n});","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\nimport Add from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { FieldArray, Form, Formik, getIn } from 'formik';\nimport { generateId } from '@utilities/uuid/generateId'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { notepadSchema } from '../../schema/notepad.schema';\n\nconst useStyles = makeStyles((theme) => ({\n  paperWrapper: {\n    padding: 16\n  },\n  sectionDivider: {\n    padding: '15px 0 15px 0'\n  },\n  sendBtn: {\n    margin: theme.spacing(1),\n  }\n}))\n\nconst CreateNotepadForm = (props) => {\n  const [notepad, setNotepad] = useState(props.form);\n  const classes = useStyles()\n\n  useEffect(() => {\n    setNotepad(ps => ({ ...props.form }))\n  }, [props.form])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Paper className={classes.paperWrapper}>\n        <Formik\n          enableReinitialize\n          initialValues={notepad}\n          validationSchema={notepadSchema}\n          onSubmit={(values) => props.onSave(values)}\n        >\n        {({ values, touched, errors, handleChange, handleBlur, isValid }) => (\n          <Form noValidate autoComplete=\"off\">\n            <Grid container alignItems=\"flex-start\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" component=\"h6\">Notepad</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  name=\"title\"\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  value={values.title}\n                  onChange={handleChange}\n                  error={Boolean(errors.title)}\n                  helperText={errors.title}\n                />\n              </Grid>\n            </Grid>\n            <Grid item className={classes.sectionDivider} xs={12}>\n              <Typography variant=\"h6\" component=\"h6\">My Notes</Typography>\n            </Grid>\n            <FieldArray name=\"notes\">\n              {({ push, remove }) => (\n                <>\n                  {values.notes.map((n, index) => {\n                    const title = `notes[${index}].title`;\n                    const touchedTitle = getIn(touched, title);\n                    const errorTitle = getIn(errors, title);\n                    const note = `notes[${index}].note`;\n                    const touchedNote = getIn(touched, note);\n                    const errorNote = getIn(errors, note);\n\n                    return (\n                      <Grid container item alignItems=\"center\" spacing={4} xs={12} key={n.id}>\n                        <Grid item xs={10}>\n                          <TextField\n                            fullWidth\n                            name={title}\n                            label=\"Title\"\n                            variant=\"outlined\"\n                            value={n.title}\n                            helperText={touchedTitle && errorTitle ? errorTitle : \"\"}\n                            error={Boolean(touchedTitle && errorTitle)}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                        </Grid>\n                        <Grid container justify=\"center\" item xs={2}>\n                          <IconButton color=\"secondary\" disabled={values.notes.length === 1} onClick={() => remove(index)}>\n                            <HighlightOff />\n                          </IconButton>\n                        </Grid>\n                        <Grid item xs={10}>\n                          <TextField\n                            fullWidth\n                            name={note}\n                            label=\"Note\"\n                            multiline\n                            rows={4}\n                            variant=\"outlined\"\n                            value={n.note}\n                            helperText={touchedNote && errorNote ? errorNote : \"\"}\n                            error={Boolean(touchedNote && errorNote)}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                        </Grid>\n                      </Grid>\n                    );\n                  })}\n                  <Grid container item className={classes.sectionDivider} alignItems=\"center\" spacing={0} xs={12}>\n                    <Button\n                      className={classes.sendBtn}\n                      variant=\"contained\" \n                      color=\"primary\" \n                      type=\"submit\" \n                      endIcon={<Icon>send</Icon>}\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => push({ id: generateId(),  title: '', note: '' })}\n                      endIcon={<Add />}\n                    >\n                     Add note\n                    </Button> \n                  </Grid>\n                </>\n              )}\n            </FieldArray>\n          </Form>\n        )}\n      </Formik>\n      </Paper>\n    </Container>\n  )\n};\n\nexport default CreateNotepadForm;","import { v4 as uuidv4 } from 'uuid';\n\nexport const generateId = function() {\n  return uuidv4();\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport api from '@services/api';\nimport { httpErrorHandler } from '@utilities/httpHandlers/httpErrorHandler'\nimport rootStoreUI from \"stores/RootStoreUI\";\n\nclass CreateNotepadStore {\n  notepadForm = { id: null, title: '', notes: [ { id: null, title: '', note: '' } ] }\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  async createNotepad(data) {\n    rootStoreUI.startProgress();\n    const notepad = this.prepareNotepad(data);\n    try {\n      const response = await api.notepad.create({ data: notepad })\n      rootStoreUI.openAlert({ message: 'Notepad successfully created!' });\n      const updatedNotepad = this.updateLocalNotepadData(response.data.id, response.data);\n      runInAction(() => { this.notepadForm = updatedNotepad });\n      console.info(\"createNotepad ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'error', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  async updateNotepad(data) {\n    rootStoreUI.startProgress();\n    const { id, ...rest } = data; \n    const notepad = this.prepareNotepad(rest);\n    try {\n      const response = await api.notepad.update(id, { data: notepad });\n      rootStoreUI.openAlert({ message: 'Notepad successfully updated!' });\n      console.info(\"updateNotepad ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'error', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n    \n  }\n\n  async getNotepad(id) {\n    rootStoreUI.startProgress();\n    try {\n      const response = await api.notepad.getNotepadById(id);\n      const notepad = this.updateLocalNotepadData(id, response.data);\n      runInAction(() => { this.notepadForm = notepad });\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'warning', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  prepareNotepad(data) {\n    const template = this.createTemplate()\n    template.description = data.title;\n    template.files.notepad = {\n      filename: 'notepad',\n      content: JSON.stringify(data)\n    };\n\n    return template;\n  }\n\n  reset() {\n    runInAction(() => {\n      this.notepadForm = { id: null, title: '', notes: [ { id: null, title: '', note: '' } ] }\n    })\n  }\n\n  createTemplate() {\n    return {\n      description: '',\n      public: true,\n      files: {}\n    }\n  }\n\n  updateLocalNotepadData(id, data) {\n    if(!data.files.notepad) {\n      throw new Error('Requires authentication');\n    }\n    const notepad = { id };\n    const content = JSON.parse(data.files.notepad.content);\n    notepad.title =  content.title;\n    notepad.notes =  content.notes;\n    return notepad;\n  }\n}\n\nexport default new CreateNotepadStore();","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react-lite';\nimport Button from '@material-ui/core/Button';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport CreateNotepadForm from './components/CreateNotepadForm';\nimport createNotepadStore from './CreateNotepadStore';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    paddingBottom: 32,\n  }\n}))\n\nconst CreateNotepad = observer((props) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const queryString = props.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const id = urlParams.get('id');\n    if(id) {\n      createNotepadStore.getNotepad(id);\n    }\n    return () => {\n      createNotepadStore.reset()\n    }\n  }, [props.location.search])\n\n  const handleNavigateBack = () => {\n    props.history.goBack();\n  }\n\n  const handleCreateNotepad = (data) => {\n    if(data.id) {\n      createNotepadStore.updateNotepad(data);\n      return;\n    }\n    createNotepadStore.createNotepad(data)\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n     <Grid container className={classes.header}>\n      <Grid>\n        <Button\n          color=\"primary\"\n          onClick={handleNavigateBack}\n          startIcon={<ChevronLeft />}\n        >\n        Go Back\n        </Button>\n      </Grid>\n     </Grid>\n     <Grid>\n      <CreateNotepadForm form={createNotepadStore.notepadForm} onSave={handleCreateNotepad}/>\n     </Grid>\n    </Container>\n  );\n});\n\nexport default CreateNotepad;"],"sourceRoot":""}