{"version":3,"sources":["utilities/httpHandlers/httpErrorHandler.js","config/axios/index.js","services/api/Service.js","config/apis/index.js","services/api/gateways/NotepadAPI.js","services/api/Api.js","components/Chart/Chart.js","utilities/dates/durationDiff.js","modules/Dashboard/DashboardStore.js","modules/Dashboard/Dashboard.jsx"],"names":["httpErrorHandler","error","template","message","status","response","console","warn","data","headers","request","axios","axiosInstance","create","baseURL","timeout","Service","url","options","method","apis","keys","process","NotepadAPI","api","base","routes","gists","public","setAuthorizationToken","this","get","post","id","patch","delete","notepad","token","defaults","scales","yAxes","ticks","beginAtZero","Chart","React","memo","durationDiff","start","end","source","moment","target","duration","diff","chartData","generateChartData","label","fileChartData","dataPage","filePage","makeAutoObservable","a","rootStoreUI","startProgress","getGistsPublicList","params","page","per_page","transformGists","chart","datasets","runInAction","log","openAlert","severity","endProgress","files","transformGitsFiles","currentDate","created_at","i","length","asSeconds","push","filesCount","Object","labels","backgroundColor","borderColor","borderWidth","useStyles","makeStyles","theme","header","paddingBottom","controls","padding","observer","classes","useEffect","dashboardStore","getGistsDateFilesRange","reset","Container","maxWidth","Grid","className","Typography","variant","component","container","lg","md","spacing","alignItems","item","xs","justify","Button","color","onClick"],"mappings":"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","file":"static/js/10.92b33bcf.chunk.js","sourcesContent":["export const httpErrorHandler = function(error) {\n  const template = {\n    message: 'Something went wrong :(',\n    status: 0\n  }\n\n  if (error.response) {\n    console.warn('Request made and server responded')\n    template.message = error.response.data.message;\n    template.status = error.response.status\n    console.warn('Response data: ', error.response.data);\n    console.warn('Response status: ', error.response.status);\n    console.warn('Response headers: ', error.response.headers);\n  } else if (error.request) {\n    console.warn('The request was made but no response was received')\n    console.warn('Request', error.request);\n  } else {\n    console.warn('Something happened in setting up the request that triggered an Error')\n    template.message = error.message;\n    console.warn('Error', error.message);\n  }\n\n  return template;\n}","import axiosInstance from 'axios'\n\nexport const axios = axiosInstance.create({\n  baseURL: '/',\n  timeout: 35000,\n})","import { axios } from '@config/axios';\nexport class Service {\n  get(url, options) {\n    return axios({ method: 'GET', url, ...options });\n  }\n\n  post(url, options) {\n    return axios({ method: 'POST', url, ...options });\n  }\n\n  delete(url, options) {\n    return axios({ method: 'DELETE', url, ...options });\n  }\n\n  put(url, options) {\n    return axios({ method: 'PUT', url, ...options });\n  }\n\n  patch(url, options) {\n    return axios({ method: 'PATCH', url, ...options });\n  }\n}","export const apis = {\n  GISTS_URL: 'https://api.github.com'\n}\n\nexport const keys = {\n  GISTS_TOKEN: process.env.REACT_APP_GISTS_TOKEN\n} ","import { Service } from '@services/api';\nimport { apis, keys } from '@config/apis';\n\nexport class NotepadAPI extends Service {\n  base = apis.GISTS_URL;\n  routes = {\n    gists: '/gists',\n    public: '/gists/public'\n  }\n\n  constructor(api) {\n    super(api)\n    api.setAuthorizationToken(keys.GISTS_TOKEN)\n  }\n\n  getGistsList(options) {\n    return this.get(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  create(options) {\n    return this.post(this.routes.gists, { baseURL: this.base, ...options })\n  }\n\n  update(id, options) {\n    return this.patch(`${this.routes.gists}/${id}`, { baseURL: this.base, ...options })\n  }\n\n  getNotepadById(id) {\n    return this.get(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  deleteById(id) {\n    return this.delete(`${this.routes.gists}/${id}`, { baseURL: this.base })\n  }\n\n  getGistsPublicList(options) {\n    return this.get(this.routes.public, { baseURL: this.base, ...options })\n  }\n  \n}","import { axios } from '@config/axios';\nimport { NotepadAPI } from './gateways/NotepadAPI';\n\nclass Api {\n \n  constructor() {\n    this.notepad = new NotepadAPI(this);\n  }\n\n  setAuthorizationToken(token) {\n    if (!token) return;\n    \n    axios.defaults.headers['Authorization'] = `Bearer ${token}`\n  }\n\n  removeAuthorizationToken() {\n    delete axios.defaults.headers['Authorization']\n  }\n}\n\nexport default new Api()","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// @TODO  options must be passed from the parent\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst Chart = ({ data }) => (\n  <Line data={data} options={options} />\n);\n\nexport default React.memo(Chart);","import moment from 'moment';\n\nexport default function durationDiff(start, end) {\n  const source = moment(start);\n  const target = moment(end);\n  return  moment.duration(source.diff(target));\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport rootStoreUI from \"stores/RootStoreUI\";\nimport api from '@services/api';\nimport { httpErrorHandler } from '@utilities/httpHandlers/httpErrorHandler';\nimport durationDiff from '@utilities/dates/durationDiff';\n\nclass DashboardStore {\n  chartData = this.generateChartData([], { label: 'Created Gists' });\n  fileChartData = this.generateChartData([], { label: 'Created Gists files' });\n\n  dataPage = 0;\n  filePage = 0;\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  async getGistsPublicList() {\n    rootStoreUI.startProgress();\n    try {\n      this.dataPage = this.dataPage + 1;\n      const response = await api.notepad.getGistsPublicList({ params: { page: this.dataPage, per_page: 30 } });\n      const data = this.transformGists(response.data);\n\n      const chart = this.generateChartData([...this.chartData.datasets[0].data, ...data], { label: 'Created Gists' });\n      runInAction(() => { this.chartData = chart });\n      console.log(\"getGistsPublicList ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'warning', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  async getGistsDateFilesRange() {\n    rootStoreUI.startProgress();\n    try {\n      this.filePage = this.filePage + 1;\n      const response = await api.notepad.getGistsPublicList({ params: { page: this.filePage, per_page: 30 } });\n      const files = this.transformGitsFiles(response.data);\n      const chart = this.generateChartData([...this.fileChartData.datasets[0].data, ...files], { label: 'Created Gists files' });\n      runInAction(() => { this.fileChartData = chart });\n      console.log(\"getGistsDateFilesRange ~ response\", response);\n    } catch (error) {\n      const { message } = httpErrorHandler(error);\n      rootStoreUI.openAlert({ severity: 'warning', message });\n    } finally {\n      rootStoreUI.endProgress();\n    }\n  }\n\n  transformGists(gists) {\n    const data = [0];\n    let currentDate = gists[0].created_at;\n    \n    for (let i = 0; i < gists.length; i++) {\n      const diff = durationDiff(currentDate, gists[i].created_at).asSeconds();\n      if(diff <= 5) {\n        data[data.length - 1] = data[data.length - 1] + 1;\n      } else {\n        currentDate = gists[i].created_at;\n        data.push(1);\n      }\n    }\n    return data;\n  }\n\n  transformGitsFiles(gists) {\n    const data = [0];\n    let currentDate = gists[0].created_at;\n\n    for (let i = 0; i < gists.length; i++) {\n      const diff = durationDiff(currentDate, gists[i].created_at).asSeconds();\n      const filesCount = Object.keys(gists[i].files).length;\n      if(diff <= 5) {\n        data[data.length - 1] = data[data.length - 1] + filesCount;\n      } else {\n        currentDate = gists[i].created_at;\n        data.push(filesCount);\n      }\n    }\n    return data;\n  }\n\n  generateChartData(data, { label }) {\n    return {\n      labels: data,\n      datasets: [\n        {\n          label,\n          data,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n          ],\n          borderWidth: 1,\n        },\n      ],\n    }\n  }\n \n  reset() {\n    this.chartData = this.generateChartData([], { label: 'Created Gists' });\n    this.fileChartData = this.generateChartData([], { label: 'Created Gists files' });\n\n    this.dataPage = 0;\n    this.filePage = 0;\n\n  }\n}\n\nexport default new DashboardStore();","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { observer } from 'mobx-react-lite';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Chart from '@components/Chart';\nimport dashboardStore from './DashboardStore';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    paddingBottom: 32,\n  },\n  controls: {\n    padding: '10px 0 10px 0',\n  }\n}))\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    dashboardStore.getGistsPublicList();\n    dashboardStore.getGistsDateFilesRange();\n    return () => {\n      dashboardStore.reset();\n    }\n  }, [])\n\n  const handleLoadMoreGist = () => {\n    dashboardStore.getGistsPublicList();\n  }\n\n  const handleLoadMoreFiles = () => {\n    dashboardStore.getGistsDateFilesRange();\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid className={classes.header}>\n        <Typography variant=\"h5\" component=\"h5\">Dashboard</Typography>\n      </Grid>\n      <Grid container>\n        <Grid container lg={6} md={12} spacing={6}>\n          <Grid container alignItems=\"center\" item>\n            <Grid item xs={12}>\n              <Chart data={dashboardStore.chartData} />\n            </Grid>\n            <Grid container className={classes.controls} item justify=\"center\" xs={12}>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleLoadMoreGist}\n                >\n                Load More gists\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container lg={6} md={12} spacing={6}>\n          <Grid container alignItems=\"center\" item>\n            <Grid item xs={12}>\n              <Chart data={dashboardStore.fileChartData} />\n            </Grid>\n            <Grid container className={classes.controls} item justify=\"center\" xs={12}>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleLoadMoreFiles}\n                >\n                Load More files\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default observer(Dashboard);"],"sourceRoot":""}